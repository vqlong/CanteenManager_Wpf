<Window x:Class="GUI.wTableManager"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GUI"
        mc:Ignorable="d"
        Title="{Binding ElementName=txbTitle, Path=Text}" 
        MinHeight="850" 
        MinWidth="1050"
        WindowStartupLocation="CenterScreen"
        Style="{StaticResource Window.CustomStyle}"
        Background="{Binding ElementName=cbBackground, Path=SelectedItem.Brush}"
        BorderBrush="{Binding ElementName=cbBorderColor, Path=SelectedItem.Brush}"
        xmlns:models="clr-namespace:Models;assembly=Models"        
        xmlns:mctrl="clr-namespace:WpfLibrary.UserControls;assembly=WpfLibrary"
        xmlns:mlib="clr-namespace:WpfLibrary;assembly=WpfLibrary"
        Closing="Window_Closing"
        Loaded="Window_Loaded">
    
    <Window.Resources>

        <CollectionViewSource x:Key="SkinsView" Source="{Binding Skins}"/>
        
        <CollectionViewSource x:Key="TextColorView" Source="{Binding Brushes}"/>
        <CollectionViewSource x:Key="BackgroundView" Source="{Binding Brushes}"/>
        <CollectionViewSource x:Key="ControlBackgroundView" Source="{Binding Brushes}"/>
        <CollectionViewSource x:Key="BorderColorView" Source="{Binding Brushes}"/>
        <CollectionViewSource x:Key="BillColorView" Source="{Binding Brushes}"/>
        <CollectionViewSource x:Key="SelectedTableColorView" Source="{Binding Brushes}"/>
        <CollectionViewSource x:Key="TableBorderColorView" Source="{Binding Brushes}"/>
        <CollectionViewSource x:Key="UsingTableColorView" Source="{Binding Brushes}"/>
        <CollectionViewSource x:Key="UsingTableNameColorView" Source="{Binding Brushes}"/>
        <CollectionViewSource x:Key="EmptyTableColorView" Source="{Binding Brushes}"/>
        <CollectionViewSource x:Key="EmptyTableNameColorView" Source="{Binding Brushes}"/>

        <CollectionViewSource x:Key="FontFamiliesView" Source="{Binding FontFamilies}"/>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{Binding Source={StaticResource TextColorView}, Path=Brush}"/>
            <Setter Property="FontFamily" Value="{Binding Source={StaticResource FontFamiliesView}, Path=Source}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="ComboBox.SelectableColorStyle" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Background" Value="{Binding Source={StaticResource ControlBackgroundView}, Path=Brush}"/>
            <Setter Property="Foreground" Value="{Binding Source={StaticResource TextColorView}, Path=Brush}"/>
            <Setter Property="BorderBrush" Value="{Binding Source={StaticResource BorderColorView}, Path=Brush}"/>
            <Setter Property="FontFamily" Value="{Binding Source={StaticResource FontFamiliesView}, Path=Source}"/>
        </Style>

        <DataTemplate DataType="{x:Type local:NamedBrush}">
            <StackPanel Orientation="Horizontal">
                <Rectangle Width="20" Height="20" Fill="{Binding Brush}" Margin="0 0 2 0"/>
                <TextBlock Text="{Binding Name}" FontSize="16"/>
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type models:Category}">
            <Border Margin="2">
                <StackPanel Orientation="Horizontal">
                    <Image Source="Image/icon.ico" Width="30"/>
                    <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="5 0 0 0" />
                </StackPanel>
            </Border>
        </DataTemplate>

        <DataTemplate DataType="{x:Type models:Food}">
            <Border Margin="2">
                <StackPanel Orientation="Horizontal">
                    <Image Source="Image/icon.ico" Width="30"/>
                    <TextBlock Text="{Binding Name}"  VerticalAlignment="Center" Margin="5 0 0 0" />
                </StackPanel>
            </Border>
        </DataTemplate>

        <Style TargetType="ToggleButton">
            <Setter Property="BorderBrush" Value="{Binding Source={StaticResource TableBorderColorView}, Path=Brush}"/>
            <Setter Property="FontFamily" Value="{Binding Source={StaticResource FontFamiliesView}, Path=Source}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="MinHeight" Value="100"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="10"
                                    MinWidth="{TemplateBinding MinWidth}"
                                    MinHeight="{TemplateBinding MinHeight}">
                            <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button.CustomStyle" TargetType="Button">
            <Setter Property="Background" Value="{Binding Source={StaticResource UsingTableColorView}, Path=Brush}"/>
            <Setter Property="Foreground" Value="{Binding Source={StaticResource UsingTableNameColorView}, Path=Brush}"/>
            <Setter Property="BorderBrush" Value="{Binding Source={StaticResource TableBorderColorView}, Path=Brush}"/>
            <Setter Property="FontFamily" Value="{Binding Source={StaticResource FontFamiliesView}, Path=Source}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(mlib:AttachedManager.CornerRadius)}"
                                    Width="{TemplateBinding ActualWidth}" 
                                    Height="{TemplateBinding ActualHeight}"
                                    ToolTipService.InitialShowDelay="0">
                            <!--<Border.ToolTip>
                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"/>
                            </Border.ToolTip>-->
                            <TextBlock Text="{TemplateBinding Content}" TextAlignment="Center" TextWrapping="Wrap" TextBlock.Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#ccf9ff"/>
                                <Setter Property="BorderBrush" Value="#00acdf"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#7ce8ff"/>
                                <Setter Property="BorderBrush" Value="#0080bf"/>
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" Value="#7873f5"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button.CircleStyle" TargetType="Button" BasedOn="{StaticResource Button.CustomStyle}">
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="80"/>
            <Setter Property="mlib:AttachedManager.CornerRadius" Value="40"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style x:Key="Button.RectangleStyle" TargetType="Button" BasedOn="{StaticResource Button.CustomStyle}">
            <Setter Property="mlib:AttachedManager.CornerRadius" Value="5"/>
            <Setter Property="Margin" Value="2"/>
        </Style>

        <Style TargetType="mctrl:NumericUpDown">
            <Setter Property="Background" Value="{Binding ElementName=cbControlBackground, Path=SelectedItem.Brush}"/>
            <Setter Property="Foreground" Value="{Binding ElementName=cbTextColor, Path=SelectedItem.Brush}"/>
            <Setter Property="BorderBrush" Value="{Binding ElementName=cbBorderColor, Path=SelectedItem.Brush}"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="mlib:AttachedManager.CornerRadius" Value="4.5"/>
        </Style>
        
        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999"/>
        <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121"/>
        <SolidColorBrush x:Key="Menu.Static.Separator" Color="#FFD7D7D7"/>
        <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
        <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
        <ControlTemplate x:Key="SubmenuItemTemplate" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                <Grid Margin="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" Background="{StaticResource MenuItem.Selected.Background}" BorderBrush="{StaticResource MenuItem.Selected.Border}" BorderThickness="1" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
                        <Path x:Name="Glyph" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="10"/>
                    </Border>
                    <ContentPresenter x:Name="menuHeaderContainer" ContentSource="Header" Grid.Column="2" HorizontalAlignment="Stretch" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock x:Name="menuGestureText" Grid.Column="3" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="MenuItem" >
            <Style.Triggers>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template" Value="{StaticResource SubmenuItemTemplate}"/>
                    <Setter Property="StaysOpenOnClick" Value="True"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <LinearGradientBrush x:Key="GridViewColumnHeaderBorderBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF2F2F2" Offset="0"/>
            <GradientStop Color="#FFD5D5D5" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GridViewColumnHeaderBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFFFFFFF" Offset="0"/>
            <GradientStop Color="#FFFFFFFF" Offset="0.4091"/>
            <GradientStop Color="#FFF7F8F9" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GridViewColumnHeaderHoverBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFE3F7FF" Offset="0"/>
            <GradientStop Color="#FFB7E7FB" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GridViewColumnHeaderPressBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFBCE4F9" Offset="0"/>
            <GradientStop Color="#FF8AD1F5" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
            <Setter Property="Canvas.Right" Value="-9"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Center" Width="10"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="FontFamily" Value="{Binding Source={StaticResource FontFamiliesView}, Path=Source}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{Binding Source={StaticResource TextColorView}, Path=Brush}"/>
            <Setter Property="BorderThickness" Value="0 0 0 3"/>
            <Setter Property="Padding" Value="2,0,2,0"/>
            <Setter Property="Foreground" Value="{Binding Source={StaticResource BorderColorView}, Path=Brush}"/>
            <EventSetter Event="Click" Handler="GridViewColumnHeader_Click"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid SnapsToDevicePixels="true">
                                <Border x:Name="HeaderBorder" Background="{TemplateBinding Background}" CornerRadius="3" Margin="3" >
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition MaxHeight="10"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Border x:Name="UpperHighlight" Background="#FFE3F7FF" CornerRadius="3 3 0 0" Visibility="Collapsed"/>
                                        <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
                                            <ContentPresenter x:Name="HeaderContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="HeaderHoverBorder"  BorderThickness="1" CornerRadius="3" Margin="1"/>
                                <Border x:Name="HeaderPressBorder"  BorderThickness="1" CornerRadius="3" Margin="1"/>
                                <Canvas>
                                    <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}"/>
                                </Canvas>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="HeaderBorder" Value="{StaticResource GridViewColumnHeaderHoverBackground}"/>
                                <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FF88CBEB"/>
                                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                <Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="HeaderBorder" Value="{StaticResource GridViewColumnHeaderPressBackground}"/>
                                <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FF95DAF9"/>
                                <Setter Property="BorderBrush" TargetName="HeaderPressBorder" Value="#FF7A9EB1"/>
                                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                <Setter Property="Background" TargetName="UpperHighlight" Value="#FFBCE4F9"/>
                                <Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>
                                <Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Role" Value="Floating">
                    <Setter Property="Opacity" Value="0.4082"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                <Canvas x:Name="PART_FloatingHeaderCanvas">
                                    <Rectangle Fill="#FF000000" Height="{TemplateBinding ActualHeight}" Opacity="0.4697" Width="{TemplateBinding ActualWidth}"/>
                                </Canvas>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Role" Value="Padding">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                <Border x:Name="HeaderBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Height" Value="Auto">
                                        <Setter Property="MinHeight" Value="20"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Storyboard x:Key="Storyboard.Equalizer">
            <DoubleAnimation Storyboard.TargetName="rec1"
                                                 Storyboard.TargetProperty="Height"
                                                 From="{Binding ElementName=borderMediaEqualizer, Path=ActualHeight}"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0"/>
            <DoubleAnimation Storyboard.TargetName="rec2"
                                                 Storyboard.TargetProperty="Height"
                                                 From="{Binding ElementName=borderMediaEqualizer, Path=ActualHeight}"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0.1"/>
            <DoubleAnimation Storyboard.TargetName="rec3"
                                                 Storyboard.TargetProperty="Height"
                                                 From="{Binding ElementName=borderMediaEqualizer, Path=ActualHeight}"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0.2"/>
            <DoubleAnimation Storyboard.TargetName="rec4"
                                                 Storyboard.TargetProperty="Height"
                                                 From="{Binding ElementName=borderMediaEqualizer, Path=ActualHeight}"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0.3"/>
            <DoubleAnimation Storyboard.TargetName="rec5"
                                                 Storyboard.TargetProperty="Height"
                                                 From="{Binding ElementName=borderMediaEqualizer, Path=ActualHeight}"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0.4"/>
            <DoubleAnimation Storyboard.TargetName="rec6"
                                                 Storyboard.TargetProperty="Height"
                                                 From="{Binding ElementName=borderMediaEqualizer, Path=ActualHeight}"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0.5"/>
            <DoubleAnimation Storyboard.TargetName="rec7"
                                                 Storyboard.TargetProperty="Height"
                                                 From="{Binding ElementName=borderMediaEqualizer, Path=ActualHeight}"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0.6"/>
            <DoubleAnimation Storyboard.TargetName="rec8"
                                                 Storyboard.TargetProperty="Height"
                                                 From="{Binding ElementName=borderMediaEqualizer, Path=ActualHeight}"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0.7"/>

            <DoubleAnimation Storyboard.TargetName="rec11"
                                                 Storyboard.TargetProperty="Height"
                                                 From="16"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0"/>
            <DoubleAnimation Storyboard.TargetName="rec22"
                                                 Storyboard.TargetProperty="Height"
                                                 From="16"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0.1"/>
            <DoubleAnimation Storyboard.TargetName="rec33"
                                                 Storyboard.TargetProperty="Height"
                                                 From="16"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0.2"/>
            <DoubleAnimation Storyboard.TargetName="rec44"
                                                 Storyboard.TargetProperty="Height"
                                                 From="16"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0.3"/>
            <DoubleAnimation Storyboard.TargetName="rec55"
                                                 Storyboard.TargetProperty="Height"
                                                 From="16"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0.4"/>
            <DoubleAnimation Storyboard.TargetName="rec66"
                                                 Storyboard.TargetProperty="Height"
                                                 From="16"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0.5"/>
            <DoubleAnimation Storyboard.TargetName="rec77"
                                                 Storyboard.TargetProperty="Height"
                                                 From="16"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0.6"/>
            <DoubleAnimation Storyboard.TargetName="rec88"
                                                 Storyboard.TargetProperty="Height"
                                                 From="16"
                                                 To="0"
                                                 RepeatBehavior="Forever"
                                                 BeginTime="0:0:0.7"/>
        </Storyboard>
    </Window.Resources>

    <DockPanel>
        <DockPanel.CommandBindings>
            <CommandBinding Command="{x:Static local:wTableManager.Checkout}" CanExecute="Checkout_CanExecute" Executed="Checkout_Executed"/>
            <CommandBinding Command="{x:Static local:wTableManager.SwapTable}" CanExecute="SwapTable_CanExecute" Executed="SwapTable_Executed"/>
            <CommandBinding Command="{x:Static local:wTableManager.CombineTable}" CanExecute="CombineTable_CanExecute" Executed="CombineTable_Executed"/>
        </DockPanel.CommandBindings>
        <DockPanel.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Admin" Click="MenuItemAdmin_Click">
                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding LoginAccount.Type}" Value="Admin">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <MenuItem Header="Thông tin cá nhân" Padding="-2 0 0 0" InputGestureText="{Binding LoginAccount.DisplayName, StringFormat={}[{0}]}" Click="MenuItemAccountProfile_Click"/>
                <Separator/>
                <MenuItem Header="Chọn màu">
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Chọn Skin</TextBlock>
                                <ComboBox ItemsSource="{Binding Source={StaticResource SkinsView}}" 
                                          DisplayMemberPath="Name"
                                          SelectedValuePath="Name"
                                          IsSynchronizedWithCurrentItem="True" 
                                          FontSize="16"
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Màu chữ</TextBlock>
                                <ComboBox ItemsSource="{Binding Source={StaticResource TextColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Màu nền</TextBlock>
                                <ComboBox ItemsSource="{Binding Source={StaticResource BackgroundView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Control</TextBlock>
                                <ComboBox ItemsSource="{Binding Source={StaticResource ControlBackgroundView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Đường viền</TextBlock>
                                <ComboBox ItemsSource="{Binding Source={StaticResource BorderColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Hoá đơn</TextBlock>
                                <ComboBox ItemsSource="{Binding Source={StaticResource BillColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Chọn bàn</TextBlock>
                                <ComboBox ItemsSource="{Binding Source={StaticResource SelectedTableColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Cạnh bàn</TextBlock>
                                <ComboBox ItemsSource="{Binding Source={StaticResource TableBorderColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Có người</TextBlock>
                                <ComboBox ItemsSource="{Binding Source={StaticResource UsingTableColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Tên bàn</TextBlock>
                                <ComboBox ItemsSource="{Binding Source={StaticResource UsingTableNameColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Trống</TextBlock>
                                <ComboBox ItemsSource="{Binding Source={StaticResource EmptyTableColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Tên bàn</TextBlock>
                                <ComboBox ItemsSource="{Binding Source={StaticResource EmptyTableNameColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Chọn Fonts">
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="0 0 5 0">Fonts chữ</TextBlock>
                                <ComboBox ItemsSource="{Binding Source={StaticResource FontFamiliesView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" >
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate DataType="{x:Type FontFamily}">
                                            <TextBlock Text="{Binding FamilyNames[en-us]}" FontFamily="{Binding}" FontSize="16"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Nghe nhạc" Padding="-2 0 0 0" InputGestureText="{Binding Source={x:Reference Name=txblMediaPosition}, Path=Text}" Click="MenuItemPlayMedia_Click">
                    <MenuItem.Icon>
                        <Border Margin="-3 0 -5 0">
                            <Border.Background>
                                <VisualBrush Visual="{x:Reference Name=borderMediaEqualizer}"/>
                            </Border.Background>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Về chương trình" Click="MenuItemAbout_Click"/>
                <MenuItem Header="Đăng xuất" Click="MenuItemLogout_Click"/>
            </ContextMenu>
        </DockPanel.ContextMenu>
        <Menu DockPanel.Dock="Top" Background="{Binding ElementName=cbControlBackground, Path=SelectedItem.Brush}">
            <MenuItem Click="MenuItemAdmin_Click">
                <MenuItem.Header>
                    <TextBlock><AccessText>_Admin</AccessText></TextBlock>
                </MenuItem.Header>
                <MenuItem.Style>
                    <Style TargetType="MenuItem">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding LoginAccount.Type}" Value="Admin">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
            <MenuItem >
                <MenuItem.Header>
                    <TextBlock><AccessText>_Tuỳ chọn</AccessText></TextBlock>
                </MenuItem.Header>
                <MenuItem Header="Thông tin cá nhân" Padding="-2 0 0 0" InputGestureText="{Binding LoginAccount.DisplayName, StringFormat={}[{0}]}"  Click="MenuItemAccountProfile_Click"/>
                <Separator/>
                <MenuItem Header="Chọn màu">
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Chọn Skin</TextBlock>
                                <ComboBox Name="cbSkins" 
                                          ItemsSource="{Binding Source={StaticResource SkinsView}}" 
                                          DisplayMemberPath="Name"
                                          SelectedValuePath="Name"
                                          FontSize="16"
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}"
                                          SelectionChanged="cbSkins_SelectionChanged"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Màu chữ</TextBlock>
                                <ComboBox Name="cbTextColor" 
                                          ItemsSource="{Binding Source={StaticResource TextColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Màu nền</TextBlock>
                                <ComboBox Name="cbBackground"
                                          ItemsSource="{Binding Source={StaticResource BackgroundView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Control</TextBlock>
                                <ComboBox Name="cbControlBackground" ItemsSource="{Binding Source={StaticResource ControlBackgroundView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Đường viền</TextBlock>
                                <ComboBox Name="cbBorderColor" 
                                          ItemsSource="{Binding Source={StaticResource BorderColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Hoá đơn</TextBlock>
                                <ComboBox Name="cbBillColor" 
                                          ItemsSource="{Binding Source={StaticResource BillColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Chọn bàn</TextBlock>
                                <ComboBox Name="cbSelectedTableColor" 
                                          ItemsSource="{Binding Source={StaticResource SelectedTableColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Cạnh bàn</TextBlock>
                                <ComboBox Name="cbTableBorderColor" 
                                          ItemsSource="{Binding Source={StaticResource TableBorderColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Có người</TextBlock>
                                <ComboBox Name="cbUsingTableColor" 
                                          ItemsSource="{Binding Source={StaticResource UsingTableColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Tên bàn</TextBlock>
                                <ComboBox Name="cbUsingTableNameColor" 
                                          ItemsSource="{Binding Source={StaticResource UsingTableNameColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Trống</TextBlock>
                                <ComboBox Name="cbEmptyTableColor" 
                                          ItemsSource="{Binding Source={StaticResource EmptyTableColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Tên bàn</TextBlock>
                                <ComboBox Name="cbEmptyTableNameColor" 
                                          ItemsSource="{Binding Source={StaticResource EmptyTableNameColorView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem >
                        <MenuItem.Header>
                            <TextBox x:Name="txbSkinName" FontSize="16" Text="Điền tên mới cho Skin" Background="Transparent" BorderThickness="0 0 0 1"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <Button Style="{StaticResource Button.RectangleStyle}" Height="30" Click="MenuItemSaveCurrentSkin_Click">Lưu Skin hiện tại</Button>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Chọn Fonts">
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="0 0 5 0">Fonts chữ</TextBlock>
                                <ComboBox Name="cbFontFamilies"
                                          ItemsSource="{Binding Source={StaticResource FontFamiliesView}}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" >
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate DataType="{x:Type FontFamily}">
                                            <TextBlock Text="{Binding FamilyNames[en-us]}" FontFamily="{Binding}" FontSize="16"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>

                </MenuItem>
                <MenuItem Header="Nghe nhạc" Padding="-2 0 0 0" InputGestureText="{Binding ElementName=txblMediaPosition, Path=Text}" Click="MenuItemPlayMedia_Click">
                    <MenuItem.Icon>
                        <Border Margin="-3 0 -5 0">
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Name="rec11" Width="3" Fill="#EE6055" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                                <Rectangle Name="rec22" Width="3" Fill="#FFD97D" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                                <Rectangle Name="rec33" Width="3" Fill="#FF9B85" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                                <Rectangle Name="rec44" Width="3" Fill="#AAF683" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                                <Rectangle Name="rec55" Width="3" Fill="#01C32C" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                                <Rectangle Name="rec66" Width="3" Fill="#FF89B1" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                                <Rectangle Name="rec77" Width="3" Fill="#2096ff" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                                <Rectangle Name="rec88" Width="3" Fill="#FFD86F" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                            </StackPanel>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Về chương trình" Click="MenuItemAbout_Click">
                    <MenuItem >
                        <MenuItem.Header>
                            <Border>
                                <StackPanel>
                                    <TextBox x:Name="txbTitle" Text="Phần mềm quản lý canteen" TextAlignment="Center" FontSize="16" MinWidth="200" Background="Transparent" Foreground="{Binding ElementName=cbBorderColor, Path=SelectedItem.Brush}" BorderThickness="0 0 0 1" />
                                    <TextBlock Margin="0 20 0 0">Vũ Quang Long</TextBlock>
                                    <TextBlock><Hyperlink RequestNavigate="Hyperlink_RequestNavigate" NavigateUri="https://github.com/vqlong?tab=repositories">https://github.com/vqlong?tab=repositories</Hyperlink></TextBlock>
                                </StackPanel>
                            </Border>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Đăng xuất" Click="MenuItemLogout_Click"/>
            </MenuItem>
        </Menu>
        <Grid DockPanel.Dock="Bottom" Margin="2 0 2 0">
            <mctrl:XSlider x:Name="sliderMediaStatus" Mode="HorizontalSeekSlider" TrackHeight="2" Height="2"
                           DecreaseButtonBackground="{StaticResource UncheckedGradient}" IncreaseButtonBackground="Transparent"                         
                           ShowMaxMin="Collapsed" ShowValue="Collapsed"  Margin="-10 0 -10 0"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <TextBlock x:Name="txblMediaPosition" Text="00:00:00" FontSize="16" Foreground="{Binding ElementName=cbBorderColor, Path=SelectedItem.Brush}" />
                <Border Name="borderMediaEqualizer"  Margin="2 1 8 1">
                    <StackPanel Orientation="Horizontal">
                        <Rectangle Name="rec1" Width="5" Fill="#EE6055" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                        <Rectangle Name="rec2" Width="5" Fill="#FFD97D" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                        <Rectangle Name="rec3" Width="5" Fill="#FF9B85" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                        <Rectangle Name="rec4" Width="5" Fill="#AAF683" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                        <Rectangle Name="rec5" Width="5" Fill="#01C32C" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                        <Rectangle Name="rec6" Width="5" Fill="#FF89B1" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                        <Rectangle Name="rec7" Width="5" Fill="#2096ff" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                        <Rectangle Name="rec8" Width="5" Fill="#FFD86F" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"/>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Grid>
        <DockPanel >
            <DockPanel DockPanel.Dock="Right" Width="750">
                <Grid DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <ComboBox Name="cbCategories" Grid.Row="0" Grid.Column="0" Style="{StaticResource ComboBox.SelectableColorStyle}" />
                    <TextBlock Grid.Row="0" Grid.Column="1"  FontWeight="Bold" FontSize="26">Số lượng:</TextBlock>
                    <ComboBox Name="cbFoods" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding ElementName=cbCategories, Path=SelectedItem.Foods}" Style="{StaticResource ComboBox.SelectableColorStyle}" />
                    <mctrl:NumericUpDown x:Name="nmFoodCount" Grid.Row="1" Grid.Column="1" MinValue="-10" MaxValue="10" Width="100" />
                    <Button Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Style="{StaticResource Button.CircleStyle}" Click="ButtonAddFood_Click">Thêm món</Button>
                </Grid>
                <Grid DockPanel.Dock="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Button Grid.Row="0" Grid.Column="0" Style="{StaticResource Button.RectangleStyle}" Command="{x:Static local:wTableManager.SwapTable}">Chuyển tới</Button>
                    <TextBlock Grid.Row="0" Grid.Column="1" >Chọn bàn:</TextBlock>
                    <TextBlock Grid.Row="0" Grid.Column="2" >Giảm giá:</TextBlock>
                    <TextBlock Grid.Row="0" Grid.Column="3" >Thành tiền:</TextBlock>
                    <Button Grid.Row="1" Grid.Column="0" Style="{StaticResource Button.RectangleStyle}" Command="{x:Static local:wTableManager.CombineTable}" >Gộp vào</Button>
                    <ComboBox x:Name="cbTables" Grid.Row="1" Grid.Column="1" HorizontalContentAlignment="Center" ItemsSource="{Binding Tables}" IsEditable="True" Style="{StaticResource ComboBox.SelectableColorStyle}" SelectedValuePath="Name" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=SelectedValue}" ToolTipService.InitialShowDelay="0"/>
                    <mctrl:NumericUpDown x:Name="nmDiscount" Grid.Row="1" Grid.Column="2" MinValue="0" MaxValue="100" />
                    <Border Grid.Row="1" Grid.Column="3" Background="{Binding ElementName=cbControlBackground, Path=SelectedItem.Brush}" BorderBrush="{Binding ElementName=cbBorderColor, Path=SelectedItem.Brush}" BorderThickness="1" CornerRadius="5" Margin="2">
                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Margin="5 0 5 0">
                            <TextBlock x:Name="txblTotalPrice" Tag="{Binding ElementName=lsvBill, Path=ItemsSource, Converter={x:Static local:GetBillTotalPriceConverter.Default}}" Text="{Binding RelativeSource={RelativeSource Self}, Path=Tag, ConverterCulture=vi-vn, StringFormat={}{0:C1}}" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" ToolTipService.InitialShowDelay="0" />
                        </ScrollViewer>
                    </Border>
                    <Button Grid.Row="0" Grid.Column="4" Grid.RowSpan="2" Style="{StaticResource Button.CircleStyle}" Command="{x:Static local:wTableManager.Checkout}">Thanh toán</Button>
                </Grid>
                <GroupBox BorderBrush="{Binding ElementName=cbBorderColor, Path=SelectedItem.Brush}" BorderThickness="1" Margin="2">
                    <GroupBox.Header>
                        <TextBlock Text="{Binding ElementName=lsvTables, Path=SelectedItem.Name, StringFormat={}Hoá đơn chưa thanh toán [{0}], FallbackValue=Hoá đơn chưa thanh toán}" Foreground="{Binding ElementName=cbBillColor, Path=SelectedItem.Brush}" FontWeight="Bold" FontSize="26"/>
                    </GroupBox.Header>
                    <ListView x:Name="lsvBill" ItemsSource="{Binding ElementName=lsvTables, Path=SelectedItem, Converter={x:Static local:TableToBillConverter.Default}}" Background="Transparent" BorderThickness="0">
                        <ListView.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{Binding ElementName=cbBillColor, Path=SelectedItem.Brush}"/>
                                <Setter Property="FontFamily" Value="{Binding Source={StaticResource FontFamiliesView}, Path=Source}"/>
                                <Setter Property="FontSize" Value="20"/>
                            </Style>
                            <DataTemplate x:Key="CellTemplate.Price">
                                <Border MinWidth="{Binding Source={x:Reference columnPrice}, Path=ActualWidth}" Margin="-6 -1 -6 -1">
                                    <TextBlock Text="{Binding Price, ConverterCulture=vi-vn, StringFormat={}{0:C1}}" 
                                               Foreground="{Binding Source={StaticResource BillColorView}, Path=Brush}" 
                                               FontFamily="{Binding Source={StaticResource FontFamiliesView}, Path=Source}"
                                               FontSize="20"
                                               HorizontalAlignment="Right" 
                                               Margin="0 0 2 0"/>
                                </Border>
                            </DataTemplate>
                            <DataTemplate x:Key="CellTemplate.TotalPrice">
                                <Border MinWidth="{Binding Source={x:Reference columnTotalPrice}, Path=ActualWidth}" Margin="-6 -1 -6 -1">
                                    <TextBlock Text="{Binding TotalPrice, ConverterCulture=vi-vn, StringFormat={}{0:C1}}" 
                                               Foreground="{Binding Source={StaticResource BillColorView}, Path=Brush}" 
                                               FontFamily="{Binding Source={StaticResource FontFamiliesView}, Path=Source}"
                                               FontSize="20"
                                               HorizontalAlignment="Right" 
                                               Margin="0 0 2 0"/>
                                </Border>
                            </DataTemplate>
                        </ListView.Resources>
                        <ListView.View>
                            <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                                <GridViewColumn mlib:AttachedManager.Double="1" mlib:AttachedManager.Tag="{x:Reference lsvBill}" Header="Tên món" DisplayMemberBinding="{Binding FoodName}"/>
                                <GridViewColumn mlib:AttachedManager.Double="2" mlib:AttachedManager.Tag="{x:Reference lsvBill}" Header="Thể loại" DisplayMemberBinding="{Binding CategoryName}"/>
                                <GridViewColumn mlib:AttachedManager.Double="3" mlib:AttachedManager.Tag="{x:Reference lsvBill}" Header="Số lượng" DisplayMemberBinding="{Binding FoodCount}"/>
                                <GridViewColumn mlib:AttachedManager.Double="4" mlib:AttachedManager.Tag="{x:Reference lsvBill}" x:Name="columnPrice" Header="Đơn giá" CellTemplate="{StaticResource CellTemplate.Price}"/>
                                <GridViewColumn mlib:AttachedManager.Double="5" mlib:AttachedManager.Tag="{x:Reference lsvBill}" x:Name="columnTotalPrice" Header="Tổng tiền" CellTemplate="{StaticResource CellTemplate.TotalPrice}"/>

                            </GridView>
                        </ListView.View>
                    </ListView>
                </GroupBox>
            </DockPanel>
            <Border BorderBrush="{Binding ElementName=cbBorderColor, Path=SelectedItem.Brush}" BorderThickness="1" CornerRadius="5" Margin="2" Padding="2">
                <ListView x:Name="lsvTables" Background="Transparent" BorderThickness="0" SelectionMode="Single">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="5"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Background" Value="Transparent"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:Table}">
                            <ToggleButton x:Name="toggle" 
                                          IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=IsSelected}" >
                                <StackPanel x:Name="stack">
                                    <TextBlock x:Name="txbName" Text="{Binding Name}" HorizontalAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                    <TextBlock x:Name="txbStatus" Text="{Binding Status}" HorizontalAlignment="Center"/>
                                </StackPanel>
                                <ToggleButton.ToolTip>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Source={x:Reference txbName}, Path=Text}" HorizontalAlignment="Center"/>
                                        <TextBlock Text="{Binding Source={x:Reference txbStatus}, Path=Text}" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </ToggleButton.ToolTip>
                            </ToggleButton>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="Trống">
                                    <Setter TargetName="toggle" Property="ToggleButton.Background" Value="{Binding Source={StaticResource EmptyTableColorView}, Path=Brush}"/>
                                    <Setter TargetName="stack" Property="TextBlock.Foreground" Value="{Binding Source={StaticResource EmptyTableNameColorView}, Path=Brush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="Có người">
                                    <Setter TargetName="toggle" Property="ToggleButton.Background" Value="{Binding Source={StaticResource UsingTableColorView}, Path=Brush}"/>
                                    <Setter TargetName="stack" Property="TextBlock.Foreground" Value="{Binding Source={StaticResource UsingTableNameColorView}, Path=Brush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=toggle, Path=IsChecked}" Value="True">
                                    <Setter TargetName="toggle" Property="ToggleButton.Background" Value="{Binding Source={StaticResource SelectedTableColorView}, Path=Brush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=toggle, Path=IsMouseOver}" Value="True">
                                    <Setter TargetName="toggle" Property="Background" Value="#ccf9ff"/>
                                    <Setter TargetName="toggle" Property="BorderBrush" Value="#00acdf"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=toggle, Path=IsPressed}" Value="True">
                                    <Setter TargetName="toggle" Property="Background" Value="#7ce8ff"/>
                                    <Setter TargetName="toggle" Property="BorderBrush" Value="#0080bf"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Border>
        </DockPanel>
    </DockPanel>
</Window>
